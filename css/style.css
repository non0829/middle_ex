@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  font-family: "Times New Roman", 游明朝, "Yu Mincho", 游明朝体, YuMincho, "ヒラギノ明朝 Pro W3", "Hiragino Mincho Pro", HiraMinProN-W3, HGS明朝E, "ＭＳ Ｐ明朝", "MS PMincho", serif;
}

h1 {
  font-size: 34px;
}

h2 {
  font-size: 36px;
}

p {
  font-size: 16px;
}

a {
  color: #FFFFFF;
  text-decoration: none;
}

@media screen and (max-width: 1200px) {
  h1 {
    font-size: 28px;
  }
  h2 {
    font-size: 28px;
  }
  p {
    font-size: 14px;
  }
}
@media screen and (max-width: 640px) {
  h2 {
    font-size: 24px;
  }
}
header {
  z-index: 100;
  position: fixed;
  top: 0;
  width: 100%;
  height: 80px;
  background-color: rgba(27, 31, 29, 0.514);
}
header nav {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  height: 100%;
  padding-right: 20px;
  padding-left: 20px;
}
header nav .header-left {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 512px;
}
@media screen and (max-width: 900px) {
  header nav .header-left {
    width: 200px;
  }
}
@media screen and (max-width: 640px) {
  header nav .header-left {
    width: 160px;
  }
}
header nav .header-left .header-image {
  width: 200px;
  height: 40px;
  margin: 20px 0px;
}
@media screen and (max-width: 640px) {
  header nav .header-left .header-image {
    width: 160px;
    height: 32px;
    margin-top: 26px;
  }
}
header nav .header-left .header-image img {
  display: block;
  width: 100%;
  height: auto;
}
header nav .header-left ul {
  display: inline-block;
  margin: 32px 0px;
  list-style: none;
}
header nav .header-left ul li {
  display: inline-block;
  color: #FFFFFF;
}
header nav .header-left ul li:nth-child(2) {
  padding-right: 30px;
  padding-left: 30px;
}
@media screen and (max-width: 900px) {
  header nav .header-left ul {
    display: none;
  }
}
header nav button {
  width: 170px;
  height: 54px;
  margin: 13px 0;
  border: none;
  background-color: #978F10;
  color: #FFFFFF;
  font-weight: bold;
  font-size: 16px;
}
@media screen and (max-width: 640px) {
  header nav button {
    width: 150px;
    height: 45px;
    margin-top: 20px;
  }
}
header nav button img {
  margin-right: 10px;
  transform: translateY(5px);
}

.scrolled, .header-sub {
  background-color: #FFFFFF;
}
.scrolled a, .header-sub a {
  color: #000000;
}

.disappear {
  display: none !important;
}

.sec_visual {
  position: relative;
}
.sec_visual img {
  display: block;
  width: 100%;
  height: auto;
  min-height: 700px;
  object-fit: cover;
  object-position: 65% 50%;
}
.sec_visual .visual_message {
  position: absolute;
  top: 33.5%;
  right: 26.5%;
  color: #FFFFFF;
  font-weight: 800;
  letter-spacing: 8px;
}
@media screen and (max-width: 640px) {
  .sec_visual .visual_message {
    top: 30%;
    right: 15%;
  }
}
.sec_visual .visual_message h1 {
  line-height: 80px;
  writing-mode: vertical-rl;
}
@media screen and (max-width: 900px) {
  .sec_visual .visual_message h1 {
    line-height: 60px;
  }
}

.sec_message {
  position: relative;
  height: 681px;
  overflow: hidden;
  font-weight: 500;
}
.sec_message img {
  z-index: -1;
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.sec_message .message_container {
  width: 970px;
  min-width: 900px;
  height: 100%;
  margin: 0 auto;
  writing-mode: vertical-rl;
}
@media screen and (max-width: 1000px) {
  .sec_message .message_container {
    width: auto;
    min-width: 0px;
  }
}
@media screen and (max-width: 640px) {
  .sec_message .message_container {
    width: 90%;
    min-width: 0px;
    writing-mode: horizontal-tb;
  }
}
.sec_message .message_container h2 {
  font-weight: 400;
  font-size: 28px;
  letter-spacing: 8px;
}
.sec_message .message_container h2:first-child {
  margin-top: 64px;
  margin-left: 20px;
}
@media screen and (max-width: 1000px) {
  .sec_message .message_container h2:first-child {
    margin-left: 10px;
  }
}
@media screen and (max-width: 640px) {
  .sec_message .message_container h2:first-child {
    margin-top: 60px;
    letter-spacing: 5px;
  }
}
.sec_message .message_container h2:nth-child(2) {
  margin-top: 150px;
}
@media screen and (max-width: 640px) {
  .sec_message .message_container h2:nth-child(2) {
    margin-top: 10px;
    margin-left: 40px;
    letter-spacing: 5px;
  }
}
.sec_message .message_container p {
  margin-top: 150px;
  margin-right: 98px;
  font-size: 16px;
  line-height: 38px;
  letter-spacing: 5px;
  text-orientation: upright;
}
@media screen and (max-width: 1000px) {
  .sec_message .message_container p {
    margin: 150px 24px 0px;
    line-height: 33px;
  }
}
@media screen and (max-width: 640px) {
  .sec_message .message_container p {
    margin: 0px;
    margin-top: 30px;
    margin-left: 40px;
    font-size: 14px;
  }
}
@media screen and (max-width: 500px) {
  .sec_message .message_container p {
    letter-spacing: 0px;
  }
}
.sec_message .message_container p:last-child {
  padding-bottom: 120px;
  font-size: 22px;
  letter-spacing: 8px;
  text-align: right;
}
@media screen and (max-width: 1000px) {
  .sec_message .message_container p:last-child {
    padding-bottom: 40px;
  }
}

.service-container {
  width: 100%;
  margin-top: 106px;
  padding-bottom: 78px;
}
@media screen and (max-width: 1200px) {
  .service-container {
    width: 90%;
    margin: 0 auto;
  }
}
.service-container .service {
  display: flex;
}
@media screen and (max-width: 1200px) {
  .service-container .service {
    margin-top: 70px !important;
  }
}
.service-container .service img {
  width: 100%;
  height: auto;
}
@media screen and (max-width: 1200px) {
  .service-container .service img {
    max-width: 500px;
    margin: 0 auto;
  }
}
.service-container .service .service-image {
  width: 54.68%;
}
@media screen and (max-width: 1200px) {
  .service-container .service .service-text, .service-container .service .service-image {
    width: 100%;
    text-align: center;
  }
}
.service-container .service h2 {
  margin-bottom: 75px;
  font-weight: 400;
  line-height: 62px;
}
@media screen and (max-width: 1200px) {
  .service-container .service h2 {
    margin-top: 20px;
    margin-bottom: 20px;
  }
}
.service-container .service p {
  line-height: 32px;
}
@media screen and (max-width: 1200px) {
  .service-container .service p {
    margin-bottom: 30px !important;
  }
}
.service-container .service:nth-child(2n) {
  flex-direction: row-reverse;
}
@media screen and (max-width: 1200px) {
  .service-container .service:nth-child(2n) {
    flex-direction: row;
    flex-direction: column;
  }
}
.service-container .service:nth-child(2n) .service-text {
  width: 288px;
  margin-right: 9%;
}
@media screen and (max-width: 1200px) {
  .service-container .service:nth-child(2n) .service-text {
    width: 100%;
    margin-left: 0px;
    text-align: center;
  }
}
.service-container .service:nth-child(2n) p {
  margin-bottom: 43px;
}
.service-container .service:nth-child(2n+1) {
  flex-direction: row;
}
@media screen and (max-width: 1200px) {
  .service-container .service:nth-child(2n+1) {
    flex-direction: column;
  }
}
.service-container .service:nth-child(2n+1) .service-text {
  width: 470px;
  margin-left: 7.1%;
}
@media screen and (max-width: 1200px) {
  .service-container .service:nth-child(2n+1) .service-text {
    width: 100%;
    margin-left: 0px;
    text-align: center;
  }
}
.service-container .service:nth-child(2n+1) p {
  margin-bottom: 75px;
}
.service-container .service + .service {
  margin-top: 122px;
}
.service-container .service button {
  width: 200px;
  height: 56px;
  margin: 0 auto;
  border: 1px solid #707070;
  background-color: transparent;
  font-size: 16px;
}

.sec_plan {
  position: relative;
  min-height: 775px;
  overflow: hidden;
  font-weight: 400;
}
.sec_plan > img {
  z-index: -1;
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.sec_plan_container {
  text-align: center;
}
.sec_plan_container > img {
  margin-top: 60px;
}
.sec_plan_container h2 {
  margin-top: 20px;
  margin-bottom: 66px;
  font-weight: 400;
}
.sec_plan_container .plan-flex {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 90%;
  max-width: 1180px;
  margin: 0 auto 144px;
  text-align: left;
}
@media screen and (max-width: 1200px) {
  .sec_plan_container .plan-flex {
    flex-direction: column;
  }
}
.sec_plan_container .plan-flex article {
  width: 331px;
}
@media screen and (max-width: 1200px) {
  .sec_plan_container .plan-flex article {
    width: 100%;
    text-align: center;
  }
  .sec_plan_container .plan-flex article img {
    display: block;
    width: 100%;
    max-width: 500px;
    height: auto;
    margin: 0 auto;
  }
  .sec_plan_container .plan-flex article + article {
    margin-top: 70px;
  }
}
.sec_plan_container .plan-flex article h3 {
  margin-top: 32px;
  font-weight: 400;
  font-size: 20px;
}
.sec_plan_container .plan-flex article p {
  margin-top: 36px;
  line-height: 32px;
}
@media screen and (max-width: 1200px) {
  .sec_plan_container .plan-flex article p {
    max-width: 500px;
    margin: 32px auto 0px;
  }
}

.sec_news_container {
  text-align: center;
}
.sec_news_container > img {
  margin-top: 60px;
}
.sec_news_container h2 {
  margin-top: 20px;
  margin-bottom: 66px;
  font-weight: 400;
}
.sec_news_container ul {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 165px;
  margin: 0 auto 49px;
}
.sec_news_container ul li {
  font-size: 16px;
  list-style: none;
}
.sec_news_container ul li.news_active {
  border-bottom: 1px solid #000000;
}
.sec_news_container .news-flex {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 90%;
  max-width: 1180px;
  margin: 0 auto 50px;
  text-align: left;
}
@media screen and (max-width: 900px) {
  .sec_news_container .news-flex {
    flex-direction: column;
  }
}
.sec_news_container .news-flex article {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 45.5%;
  height: 110px;
  margin-bottom: 20px;
  padding: 10px 15px;
  background-color: #F6F6F6;
}
@media screen and (max-width: 900px) {
  .sec_news_container .news-flex article {
    box-sizing: border-box;
    width: 100%;
    height: auto;
  }
}
.sec_news_container .news-flex article img {
  width: 103px;
  height: 100px;
}
.sec_news_container .news-flex article div {
  width: calc(100% - 30px - 103px);
  margin-left: 30px;
  line-height: 32px;
}
.sec_news_container .news-flex article div .time {
  height: 14px;
  margin-bottom: 10px;
  font-size: 14px;
}
.sec_news_container .hide {
  display: none;
}

.sec_access {
  position: relative;
  min-height: 1381px;
  overflow: hidden;
  font-weight: 400;
}
@media screen and (max-width: 640px) {
  .sec_access {
    min-height: 1300px;
  }
}
.sec_access > img {
  z-index: -1;
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.sec_access_container {
  text-align: center;
}
.sec_access_container > img {
  margin-top: 60px;
}
.sec_access_container h2 {
  margin-top: 20px;
  margin-bottom: 66px;
  font-weight: 400;
}

.access_info {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  width: 95%;
  max-width: 1440px;
  margin: 0 auto 69px;
  gap: 83px;
}
@media screen and (max-width: 1200px) {
  .access_info {
    flex-direction: column;
    width: 90%;
    gap: 20px;
  }
}
.access_info .access_info_img {
  width: 45%;
  max-width: 656px;
  margin-left: 130px;
}
@media screen and (max-width: 1200px) {
  .access_info .access_info_img {
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
  }
}
.access_info .access_info_img img {
  display: block;
  width: 100%;
  height: auto;
}
.access_info .access_info_text {
  flex: 1;
  width: 29.5%;
  text-align: left;
}
@media screen and (max-width: 1200px) {
  .access_info .access_info_text {
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
    text-align: center;
  }
}
.access_info .access_info_text h3, .access_info .access_info_text p {
  margin-bottom: 10px;
  font-size: 16px;
  line-height: 32px;
}
.access_info .access_info_text h3 {
  font-weight: bold;
}

.access_map {
  padding-bottom: 110px;
}
@media screen and (max-width: 640px) {
  .access_map {
    height: 60px;
  }
}
.access_map .map_container {
  width: 90%;
  max-width: 792px;
  height: 592px;
  margin: 0 auto;
}
@media screen and (max-width: 640px) {
  .access_map .map_container {
    height: 300px;
  }
}
.access_map .map_container iframe {
  width: 100%;
  height: 100%;
}

.sec_detail {
  position: relative;
  min-height: 522px;
  overflow: hidden;
  font-weight: 400;
  text-align: center;
}
@media screen and (max-width: 640px) {
  .sec_detail {
    min-height: 450px;
  }
}
.sec_detail > img {
  z-index: -1;
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.detail_content {
  padding-top: 64px;
}
.detail_content ul {
  margin: 0px auto 96px;
  text-align: left;
  writing-mode: vertical-rl;
}
@media screen and (max-width: 640px) {
  .detail_content ul {
    margin-bottom: 50px;
  }
}
.detail_content ul li {
  font-size: 18px;
  letter-spacing: 10px;
  list-style: none;
}
.detail_content ul li + li {
  margin-right: 34px;
}
.detail_content ul li a {
  color: #000000;
}
.detail_content img {
  margin-bottom: 72px;
}
@media screen and (max-width: 640px) {
  .detail_content img {
    margin-bottom: 50px;
  }
}

.detail_text {
  margin-bottom: 23px;
}

.detail_phone {
  padding-bottom: 61px;
}

.detail_text p:last-child {
  letter-spacing: 2px;
}

.detail_text p, .detail_phone p {
  display: inline-block;
}
.detail_text p:first-child, .detail_phone p:first-child {
  padding-right: 20px;
}

footer {
  height: 60px;
  background-color: #000000;
  text-align: center;
}
footer p {
  padding-top: 23px;
  padding-bottom: 25px;
  color: #FFFFFF;
  font-size: 12px;
  line-height: 24px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
